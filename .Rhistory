gc()
#Data
dat <- readRDS("~/Dropbox/choke species/code/thresholds_mi_distribution/data/data_sablefish2.rds")
env.dat <- dplyr::select(dat, "po2", "depth", "temp")
var.covar <- var(log(env.dat))
env.bar <- colMeans(log(env.dat))
ndata <- 1000
log.env <- rmvnorm(n = ndata, env.bar - diag(var.covar) / 2, var.covar)
env <- data.frame(exp(log.env))
## code to simulate data and then fit
Eo <- 0.004525966
#Ao <- 1.780791e-07
#n <- -0.303949
#B = 1000 # size in grams, roughly average
#avgbn <-0.1124206  # this works for the adult class (0.5 - 6 kg).  for the large adult, adjust
kelvin = 273.15
boltz = 0.000086173324
#Just doing e0
env$mi = env$po2*exp(Eo/(boltz*(env$temp+kelvin)))
#Visualize simulated mi data
plot(env$mi)
mi_crit <- 400
env$log_depth_scaled <- scale(log(env$depth))
env$log_depth_scaled2 <- env$log_depth_scaled^2
beta_0 <- 1
beta_1 <- 1.68
beta_2 <- -0.98
beta_3 <- 1
tweedie_p <- 1.52
tweedie_disp <- 7.02
#theta <- p=1 + exp(theta) / 1 + exp(theta)
#logphi <- log(tweedie_disp)
b3 <- as.array(c(beta_3,mi_crit))
logmu <- beta_3 * apply(cbind(env$mi, mi_crit), FUN = min, MAR = 1)
mu <- exp(logmu)
env <- data.frame(exp(log.env))
log.env <- rmvnorm(n = ndata, env.bar - diag(var.covar) / 2, var.covar)
library(mvtnorm)
library(mgcv)
log.env <- rmvnorm(n = ndata, env.bar - diag(var.covar) / 2, var.covar)
env <- data.frame(exp(log.env))
## code to simulate data and then fit
Eo <- 0.004525966
#Ao <- 1.780791e-07
#n <- -0.303949
#B = 1000 # size in grams, roughly average
#avgbn <-0.1124206  # this works for the adult class (0.5 - 6 kg).  for the large adult, adjust
kelvin = 273.15
boltz = 0.000086173324
#Just doing e0
env$mi = env$po2*exp(Eo/(boltz*(env$temp+kelvin)))
#Visualize simulated mi data
plot(env$mi)
mi_crit <- 400
env$log_depth_scaled <- scale(log(env$depth))
env$log_depth_scaled2 <- env$log_depth_scaled^2
beta_0 <- 1
beta_1 <- 1.68
beta_2 <- -0.98
beta_3 <- 1
tweedie_p <- 1.52
tweedie_disp <- 7.02
#theta <- p=1 + exp(theta) / 1 + exp(theta)
#logphi <- log(tweedie_disp)
b3 <- as.array(c(beta_3,mi_crit))
logmu <- beta_3 * apply(cbind(env$mi, mi_crit), FUN = min, MAR = 1)
mu <- exp(logmu)
#Visualize logmu
plot(logmu)
catch <- rTweedie(mu, p = tweedie_p, phi = tweedie_disp)
gc()
catch <- rTweedie(mu, p = tweedie_p, phi = tweedie_disp)
gc()
install.packages("remotes")
library(remotes)
remotes::install_github("pbs-assess/sdmTMB", dependencies = TRUE, ref="mi")
library(sdmTMB)
library(here)
library(mvtnorm)
library(mgcv)
library(dplyr)
library(devtools)
library(zoo)
library(ggplot2)
library(dplyr)
library(tidyr)
library(purrr)
install.packages("remotes")
?expect_error
beta1 <- -0.4
beta3 <- 0.3
delta <- 3
Eo <- 0.1
x50 <- 5
N <- 3000
set.seed(123)
invtemp <- rnorm(N)
po2 <- rlnorm(N)
mi <- po2 * exp(Eo * invtemp)
log_mu <- beta1 + beta3 * (1 / (1 + exp(-log(19) * (mi - x50) / delta)) - 1)
mu <- exp(log_mu)
# plot(mu)
# plot(mi, log_mu)
# plot(mi, mu)
sigma <- 0.05
obs <- rlnorm(N, log_mu - 0.5 * sigma^2, sigma)
if (FALSE) {
plot(mi, log(mu))
plot(mi, log(obs))
}
#Dataframe missing po2
dat <- data.frame(y = obs, invtemp = invtemp)
#Dataframe missing invtemp
dat2 <- data.frame(y = obs, po2 = po2)
#Dataframe includes mi
dat3 <- data.frame(y = obs, po2 = po2, invtemp=invtemp, mi=mi)
#Starting parameters
start <- matrix(0, ncol = 1, nrow = 4)
start[1,1] <- x50
start[2,1] <- delta
start[3,1] <- beta3
start[4,1] <- Eo
m2 <- sdmTMB(y ~ logistic(mi), data = dat, spatial = "off",
family = lognormal(),
control = sdmTMBcontrol(start = list(b_threshold = start)))
m2 <- sdmTMB(y ~ logistic(mi), data = dat3, spatial = "off",
family = lognormal(),
control = sdmTMBcontrol(start = list(b_threshold = start)))
View(m2)
library(ggeffects)
library("ggeffects")
mydf <- ggpredict(m2, terms = "mi")
dplyr_installed <- require("dplyr", quietly = TRUE)
ggplot_installed <- require("ggplot2", quietly = TRUE)
inla_installed <- requireNamespace("INLA", quietly = TRUE)
pkgs <- dplyr_installed && ggplot_installed && inla_installed
EVAL <- identical(Sys.getenv("NOT_CRAN"), "true") && pkgs
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.width = 7,
fig.asp = 0.618,
eval = EVAL,
purl = EVAL
)
library("ggeffects")
mydf <- ggpredict(m2, terms = "mi")
library("prediction")
install.packages("prediction")
install.packages("prediction")
library("prediction")
mydf <- ggpredict(m2, terms = "mi")
beta1 <- -0.4
beta3 <- 0.3
delta <- 3
x50 <- 5
log_mu <- beta1 + beta3 * (1 / (1 + exp(-log(19) * (mi - x50) / delta)) - 1)
mu <- exp(log_mu)
obs <- rlnorm(N, log_mu - 0.5 * sigma^2, sigma)
dat <- data.frame(y = obs, po2 = po2, invtemp = invtemp)
start <- matrix(0, ncol = 1, nrow = 4)
start[1,1] <- x50
start[2,1] <- delta
start[3,1] <- beta3
start[4,1] <- Eo
m2 <- sdmTMB(y ~ logistic(mi),
data = dat,
spatial = "off",
family = lognormal(),
control = sdmTMBcontrol(start = list(b_threshold = start))) #Specify starting parameters
tidy(m2)
print(m2)
mydf <- ggpredict(m2, terms = "mi")
library(visreg)
visreg(m2, xvar="mi")
#Generate random temperature and oxygen data
N <- 3000
set.seed(123)
temp <- rnorm(N)
po2 <- rlnorm(N)
kelvin = 273.15 #For converting celsius to Kelvin
boltz = 0.000086173324 #Boltzmann's constant
tref <- 12 #Reference temperature
#Calcualte inverse temperature
env$invtemp <- (1 / boltz)  * ( 1 / (temp + 273.15) - 1 / (tref + 273.15))
#Generate random temperature and oxygen data
N <- 3000
set.seed(123)
temp <- rnorm(N)
po2 <- rlnorm(N)
kelvin = 273.15 #For converting celsius to Kelvin
boltz = 0.000086173324 #Boltzmann's constant
tref <- 12 #Reference temperature
#Calcualte inverse temperature
env$invtemp <- (1 / boltz)  * ( 1 / (temp + 273.15) - 1 / (tref + 273.15))
#Generate random temperature and oxygen data
N <- 3000
set.seed(123)
temp <- rnorm(N)
po2 <- rlnorm(N)
kelvin = 273.15 #For converting celsius to Kelvin
boltz = 0.000086173324 #Boltzmann's constant
tref <- 12 #Reference temperature
#Calculate inverse temperature
invtemp <- (1 / boltz)  * ( 1 / (temp + 273.15) - 1 / (tref + 273.15))
Eo <-  0.3
mi <- po2 * exp(Eo * invtemp)
Eo <-  0.3
mi <- po2 * exp(Eo * invtemp)
beta1 <- -0.4
beta3 <- 0.3
delta <- 3
x50 <- 5
log_mu <- beta1 + beta3 * (1 / (1 + exp(-log(19) * (mi - x50) / delta)) - 1)
mu <- exp(log_mu)
obs <- rlnorm(N, log_mu - 0.5 * sigma^2, sigma)
beta1 <- -0.4
beta3 <- 0.3
delta <- 3
x50 <- 5
log_mu <- beta1 + beta3 * (1 / (1 + exp(-log(19) * (mi - x50) / delta)) - 1)
mu <- exp(log_mu)
sigma <- 0.05
obs <- rlnorm(N, log_mu - 0.5 * sigma^2, sigma)
dat <- data.frame(y = obs, po2 = po2, invtemp = invtemp)
start <- matrix(0, ncol = 1, nrow = 4)
start[1,1] <- x50
start[2,1] <- delta
start[3,1] <- beta3
start[4,1] <- Eo
m2 <- sdmTMB(y ~ logistic(mi),
data = dat,
spatial = "off",
family = lognormal(),
control = sdmTMBcontrol(start = list(b_threshold = start))) #Specify starting parameters
tidy(m2)
print(m2)
ggpredict(m2, terms="mi")
ggpredict(m2, terms="mi")
visreg(m2, xvar="mi")
library(ncdf4) # package for netcdf manipulation
library(raster) # package for raster manipulation
install.packages("ncdf4")
library(ncdf4) # package for netcdf manipulation
nc_data <- nc_open('~/Dropbox/Mac (2)/Downloads/cmems_mod_glo_bgc_my_0.25_P1D-m_1691610748846.nc')
library(CopernicusMarine)
library(lubridate)
###Temperature data
download5 <- function(start, end){
copernicus_download_motu(
username = "jindivero",
password = "MaRcH131995**",
destination= "~/Dropbox/Mac (2)/Downloads",
product= "GLOBAL_MULTIYEAR_PHY_001_030",
layer= "cmems_mod_glo_phy_my_0.083_P1D-m",
variable="po2",
output="netcdf",
region=c(-179.6, 51,-133, 65),
timerange=c(start, end),
verticalrange=c(9,1300),
overwrite = FALSE
)
}
starts5a <- seq(ymd(20090701), ymd(20200701), by="1 year")
ends5a <- seq(ymd(20090831), ymd(20200831), by="1 year")
mapply(download5, starts5a, ends5a)
library(ncdf4)
library(lubridate)
library(dplyr)
#List files
files <- list.files("~/Dropbox/choke species/code/choke-species-data/data/Copernicus/o2/alaska", all.files=T, pattern=".nc", full.names=T)
files2 <- list.files("~/Dropbox/choke species/code/choke-species-data/data/Copernicus/o2/nwfsc", all.files=T, pattern=".nc", full.names=T)
files3 <- list.files("~/Dropbox/choke species/code/choke-species-data/data/Copernicus/o2/bc", all.files=T, pattern=".nc", full.names=T)
files <- append(files, files2)
files <- append(files, files3)
# Function to extract all information from each one
extract_info <- function(file){
#Extract coordinates, time, depth
nc_ds <-  nc_open(file)
dim_lon <- ncvar_get(nc_ds, "longitude")
dim_lat <- ncvar_get(nc_ds, "latitude")
dim_depth <- ncvar_get(nc_ds, "depth")
dim_time <- ncvar_get(nc_ds, "time")
#Convert time to YYY-MM-DD format
t_units <- ncatt_get(nc_ds, "time", "units")
t_ustr <- strsplit(t_units$value, " ")
t_dstr <- strsplit(unlist(t_ustr)[3], "-")
date <- ymd(t_dstr) + dhours(dim_time)
#Create coordinates
coords <- as.matrix(expand.grid(dim_lon, dim_lat, dim_depth, date))
#Extract the variables
var1 <- ncvar_get(nc_ds, "o2", collapse_degen=FALSE)
nc_df <- matrix(cbind(coords, var1))
names(nc_df) <- c("lon", "lat", "depth", "time", "po2")
return(nc_df)
}
o2 <- lapply(files, extract_info)
gc()
o2 <- mclapply(files, extract_info)
library(parallel)
o2 <- mclapply(files, extract_info)
# Function to extract all information from each one
extract_info <- function(file){
#Extract coordinates, time, depth
nc_ds <-  nc_open(file)
dim_lon <- ncvar_get(nc_ds, "longitude")
dim_lat <- ncvar_get(nc_ds, "latitude")
dim_depth <- ncvar_get(nc_ds, "depth")
dim_time <- ncvar_get(nc_ds, "time")
#Convert time to YYY-MM-DD format
t_units <- ncatt_get(nc_ds, "time", "units")
t_ustr <- strsplit(t_units$value, " ")
t_dstr <- strsplit(unlist(t_ustr)[3], "-")
date <- ymd(t_dstr) + dhours(dim_time)
#Create coordinates
coords <- as.matrix(expand.grid(dim_lon, dim_lat, dim_depth, date))
#Extract the variables
var1 <- ncvar_get(nc_ds, "o2", collapse_degen=FALSE)
nc_df <- as.data.frame(cbind(coords, var1))
names(nc_df) <- c("lon", "lat", "depth", "time", "po2")
return(nc_df)
}
?mclapply
o2 <- mclapply(files, extract_info)
View(o2)
View(o2)
weighted_average <- readRDS("~/Library/CloudStorage/Dropbox/Pollock/for_github/data/model_processed_outputs/weighted_average.rds")
View(weighted_average)
model_index_weight <- readRDS("~/Library/CloudStorage/Dropbox/Pollock/for_github/data/model_processed_outputs/model_index_weight.rds")
View(model_index_weight)
View(weighted_average)
### load helper functions ####
source("code/util_funs.R")
library(ggplot2)
library(readxl)
setwd("/Users/jindiv/Library/CloudStorage/Dropbox/choke species/code")
### load helper functions ####
source("code/util_funs.R")
setwd("/Users/jindiv/Library/CloudStorage/Dropbox/choke species/code/choke-species-data")
### load helper functions ####
source("code/util_funs.R")
library(ggplot2)
library(readxl)
#Specify species
sci_name <- "anoplopoma fimbria"
#Specify species
sci_name <-sci_names[10]
spc <- spcs[10]
###Species catch data range availability###
#Key
sci_names <- c("gadus chalcogrammus", "anoplopoma fimbria", "microstomus pacificus", "eopsetta jordani", "gadus macrocephalus", "sebastolobus altivelis", "sebastolobus alascanus", "hippoglossus stenolepis", "sebastes pinniger", "ophiodon elongatus", "sebastes crameri", "oncorhynchus keta", "oncorhynchus tshawytscha", "oncorhynchus gorbuscha", "atheresthes stomias", "merluccius productus")
spcs <- c("walleye pollock", "sablefish", "dover sole", "petrale sole", "pacific cod", "longspine thornyhead", "shortspine thornyhead", "pacific halibut", "canary rockfish", "lingcod", "darkblotched rockfish", "chum salmon", "chinook salmon", "pink salmon", "arrowtooth flounder", "pacific hake")
#Specify species
sci_name <-sci_names[10]
spc <- spcs[10]
dat.by.size <- length_expand_nwfsc(spc, sci_name)
dat_nw <- load_data_nwfsc(spc = spc, dat.by.size = dat.by.size, length=F)
dat.by.size <- length_expand_bc(sci_name)
dat_bc <- load_data_bc(sci_name = sci_name, dat.by.size = dat.by.size)
dat.by.size <- length_expand_afsc(sci_name, years=T, region=T)
dat_afsc <- load_data_afsc(sci_name = sci_name, dat.by.size = dat.by.size, length=F)
iphc_halibut <- read_excel("~/Dropbox/choke species/code/choke-species-data/data/fish_raw/IPHC/IPHC_FISS_set_halibut.xlsx")
#Bind together
dat <- bind_rows(dat_nw, dat_bc,dat_afsc)
#Calculate proportion of biomass of intermediate size
dat$cpue_kg_km2a <- dat$cpue_kg_km2 * (dat$p2+dat$p3)
#Make base map
world <- map_data("world")
#Remove background
#Map all together by year colored by bulk biomass
ggplot() + ggtitle(spc)+
geom_polygon(data = world, aes(x=long, y=lat, group=group), colour="darkgrey",fill="grey", alpha=1) +
coord_sf(xlim = c(-180,-120), ylim=c(30,70))+
geom_point(data=filter(dat,cpue_kg_km2a>0), aes(x=long, y=lat, colour=log(cpue_kg_km2a)), size=0.2)+facet_wrap("year")+
theme(axis.text.x = element_text(angle = 30, hjust = 0.5, vjust = 0.5))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
#Save
ggsave(
"figures/data_availability/lingcod.png",
plot = last_plot(),
device = NULL,
path = NULL,
scale = 1,
width = 8,
height = 8,
units = c("in"),
dpi = 600,
limitsize = TRUE
)
###Species catch data range availability###
#Key
sci_names <- c("gadus chalcogrammus", "anoplopoma fimbria", "microstomus pacificus", "eopsetta jordani", "gadus macrocephalus", "sebastolobus altivelis", "sebastolobus alascanus", "hippoglossus stenolepis", "sebastes pinniger", "ophiodon elongatus", "sebastes crameri", "oncorhynchus keta", "oncorhynchus tshawytscha", "oncorhynchus gorbuscha", "atheresthes stomias", "merluccius productus", "sebastes entomelas")
spcs <- c("walleye pollock", "sablefish", "dover sole", "petrale sole", "pacific cod", "longspine thornyhead", "shortspine thornyhead", "pacific halibut", "canary rockfish", "lingcod", "darkblotched rockfish", "chum salmon", "chinook salmon", "pink salmon", "arrowtooth flounder", "pacific hake", "widow")
#Specify species
sci_name <-sci_names[18]
spc <- spcs[18]
###Species catch data range availability###
#Key
sci_names <- c("gadus chalcogrammus", "anoplopoma fimbria", "microstomus pacificus", "eopsetta jordani", "gadus macrocephalus", "sebastolobus altivelis", "sebastolobus alascanus", "hippoglossus stenolepis", "sebastes pinniger", "ophiodon elongatus", "sebastes crameri", "oncorhynchus keta", "oncorhynchus tshawytscha", "oncorhynchus gorbuscha", "atheresthes stomias", "merluccius productus", "sebastes entomelas")
spcs <- c("walleye pollock", "sablefish", "dover sole", "petrale sole", "pacific cod", "longspine thornyhead", "shortspine thornyhead", "pacific halibut", "canary rockfish", "lingcod", "darkblotched rockfish", "chum salmon", "chinook salmon", "pink salmon", "arrowtooth flounder", "pacific hake", "widow")
#Specify species
sci_name <-sci_names[17]
spc <- spcs[17]
spcs <- c("walleye pollock", "sablefish", "dover sole", "petrale sole", "pacific cod", "longspine thornyhead", "shortspine thornyhead", "pacific halibut", "canary rockfish", "lingcod", "darkblotched rockfish", "chum salmon", "chinook salmon", "pink salmon", "arrowtooth flounder", "pacific hake", "widow rockfish")
#Specify species
sci_name <-sci_names[17]
spc <- spcs[17]
dat.by.size <- length_expand_nwfsc(spc, sci_name)
dat_nw <- load_data_nwfsc(spc = spc, dat.by.size = dat.by.size, length=F)
dat.by.size <- length_expand_bc(sci_name)
dat_bc <- load_data_bc(sci_name = sci_name, dat.by.size = dat.by.size)
dat.by.size <- length_expand_afsc(sci_name, years=T, region=T)
dat_afsc <- load_data_afsc(sci_name = sci_name, dat.by.size = dat.by.size, length=F)
iphc_halibut <- read_excel("~/Dropbox/choke species/code/choke-species-data/data/fish_raw/IPHC/IPHC_FISS_set_halibut.xlsx")
#Bind together
dat <- bind_rows(dat_nw, dat_bc,dat_afsc)
#Calculate proportion of biomass of intermediate size
dat$cpue_kg_km2a <- dat$cpue_kg_km2 * (dat$p2+dat$p3)
#Make base map
world <- map_data("world")
#Remove background
#Map all together by year colored by bulk biomass
ggplot() + ggtitle(spc)+
geom_polygon(data = world, aes(x=long, y=lat, group=group), colour="darkgrey",fill="grey", alpha=1) +
coord_sf(xlim = c(-180,-120), ylim=c(30,70))+
geom_point(data=filter(dat,cpue_kg_km2a>0), aes(x=long, y=lat, colour=log(cpue_kg_km2a)), size=0.2)+facet_wrap("year")+
theme(axis.text.x = element_text(angle = 30, hjust = 0.5, vjust = 0.5))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
#Save
ggsave(
"figures/data_availability/widow.png",
plot = last_plot(),
device = NULL,
path = NULL,
scale = 1,
width = 8,
height = 8,
units = c("in"),
dpi = 600,
limitsize = TRUE
)
###Species catch data range availability###
#Key
sci_names <- c("gadus chalcogrammus", "anoplopoma fimbria", "microstomus pacificus", "eopsetta jordani", "gadus macrocephalus", "sebastolobus altivelis", "sebastolobus alascanus", "hippoglossus stenolepis", "sebastes pinniger", "ophiodon elongatus", "sebastes crameri", "oncorhynchus keta", "oncorhynchus tshawytscha", "oncorhynchus gorbuscha", "atheresthes stomias", "merluccius productus", "sebastes entomelas", "squalus suckleyi")
spcs <- c("walleye pollock", "sablefish", "dover sole", "petrale sole", "pacific cod", "longspine thornyhead", "shortspine thornyhead", "pacific halibut", "canary rockfish", "lingcod", "darkblotched rockfish", "chum salmon", "chinook salmon", "pink salmon", "arrowtooth flounder", "pacific hake", "widow rockfish", "pacific spiny dogfish")
#Specify species
sci_name <-sci_names[18]
spc <- spcs[18]
dat.by.size <- length_expand_nwfsc(spc, sci_name)
dat_nw <- load_data_nwfsc(spc = spc, dat.by.size = dat.by.size, length=F)
dat.by.size <- length_expand_bc(sci_name)
#Bind together
dat <- bind_rows(dat_nw, dat_afsc)
#Calculate proportion of biomass of intermediate size
dat$cpue_kg_km2a <- dat$cpue_kg_km2 * (dat$p2+dat$p3)
#Make base map
world <- map_data("world")
#Remove background
#Map all together by year colored by bulk biomass
ggplot() + ggtitle(spc)+
geom_polygon(data = world, aes(x=long, y=lat, group=group), colour="darkgrey",fill="grey", alpha=1) +
coord_sf(xlim = c(-180,-120), ylim=c(30,70))+
geom_point(data=filter(dat,cpue_kg_km2a>0), aes(x=long, y=lat, colour=log(cpue_kg_km2a)), size=0.2)+facet_wrap("year")+
theme(axis.text.x = element_text(angle = 30, hjust = 0.5, vjust = 0.5))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
View(dat_bc)
#Save
ggsave(
"figures/data_availability/spiny dogfish.png",
plot = last_plot(),
device = NULL,
path = NULL,
scale = 1,
width = 8,
height = 8,
units = c("in"),
dpi = 600,
limitsize = TRUE
)
### load helper functions ####
source("code/util_funs.R")
type <- "hauls"
catch <- combine_all(type=type)
saveRDS(catch, file="hauls_per_species.rds")
View(combine_all)
View(combine_all)
type <- "biomass"
biomass <- combine_all(type=type)
View(biomass)
species_biomass <- filter(biomass, scientific_name=sci_names)
species_biomass <- filter(biomass, scientific_name==sci_names)
#Subset to species being considered
sci_names <- c("gadus chalcogrammus", "anoplopoma fimbria", "microstomus pacificus", "eopsetta jordani", "gadus macrocephalus", "sebastolobus altivelis", "sebastolobus alascanus", "hippoglossus stenolepis", "sebastes pinniger", "ophiodon elongatus", "sebastes crameri", "oncorhynchus keta", "oncorhynchus tshawytscha", "oncorhynchus gorbuscha", "atheresthes stomias", "merluccius productus", "sebastes entomelas", "squalus suckleyi","sebastes ruberrimus","sebastes maliger", "glyptocephalus zachirus", "hippoglossoides elassodon", "parophrys vetulus", "lepidopsetta bilineata", "sebastes aleutianus")
species_biomass <- filter(biomass, scientific_name==sci_names)
species_biomass <- filter(biomass, str_detect(sci_names))
species_biomass <- filter(biomass, str_detect(sci_names))
library(stringr)
species_biomass <- filter(biomass, str_detect(sci_names))
species_biomass <- filter(biomass, sci_name==sci_names)
species_biomass <- filter(biomass, scientific_name==sci_names)
sci_names <- c("gadus chalcogrammus"|"anoplopoma fimbria"|"microstomus pacificus"|"eopsetta jordani"|"gadus macrocephalus"|"sebastolobus altivelis"|"sebastolobus alascanus"|"hippoglossus stenolepis"|"sebastes pinniger"|"ophiodon elongatus"|"sebastes crameri"|"oncorhynchus keta"|"oncorhynchus tshawytscha"|"oncorhynchus gorbuscha"|"atheresthes stomias"|"merluccius productus"|"sebastes entomelas"|"squalus suckleyi","sebastes ruberrimus","sebastes maliger"|"glyptocephalus zachirus"|"hippoglossoides elassodon"|"parophrys vetulus"|"lepidopsetta bilineata"|"sebastes aleutianus")
species_biomass <- filter(biomass, scientific_name=="gadus chalcogrammus"|"anoplopoma fimbria"|"microstomus pacificus"|"eopsetta jordani"|"gadus macrocephalus"|"sebastolobus altivelis"|"sebastolobus alascanus"|"hippoglossus stenolepis"|"sebastes pinniger"|"ophiodon elongatus"|"sebastes crameri"|"oncorhynchus keta"|"oncorhynchus tshawytscha"|"oncorhynchus gorbuscha"|"atheresthes stomias"|"merluccius productus"|"sebastes entomelas"|"squalus suckleyi","sebastes ruberrimus","sebastes maliger"|"glyptocephalus zachirus"|"hippoglossoides elassodon"|"parophrys vetulus"|"lepidopsetta bilineata"|"sebastes aleutianus")
?filter
species_biomass <- filter(biomass, str_subset(scientific_name=="gadus chalcogrammus"|"anoplopoma fimbria"|"microstomus pacificus"|"eopsetta jordani"|"gadus macrocephalus"|"sebastolobus altivelis"|"sebastolobus alascanus"|"hippoglossus stenolepis"|"sebastes pinniger"|"ophiodon elongatus"|"sebastes crameri"|"oncorhynchus keta"|"oncorhynchus tshawytscha"|"oncorhynchus gorbuscha"|"atheresthes stomias"|"merluccius productus"|"sebastes entomelas"|"squalus suckleyi","sebastes ruberrimus","sebastes maliger"|"glyptocephalus zachirus"|"hippoglossoides elassodon"|"parophrys vetulus"|"lepidopsetta bilineata"|"sebastes aleutianus"))
species_biomass <- filter(biomass, str_subset(scientific_name, c("gadus chalcogrammus"|"anoplopoma fimbria"|"microstomus pacificus"|"eopsetta jordani"|"gadus macrocephalus"|"sebastolobus altivelis"|"sebastolobus alascanus"|"hippoglossus stenolepis"|"sebastes pinniger"|"ophiodon elongatus"|"sebastes crameri"|"oncorhynchus keta"|"oncorhynchus tshawytscha"|"oncorhynchus gorbuscha"|"atheresthes stomias"|"merluccius productus"|"sebastes entomelas"|"squalus suckleyi","sebastes ruberrimus","sebastes maliger"|"glyptocephalus zachirus"|"hippoglossoides elassodon"|"parophrys vetulus"|"lepidopsetta bilineata"|"sebastes aleutianus")))
species_biomass <- filter(biomass, scientific_name %in% c("gadus chalcogrammus", "anoplopoma fimbria", "microstomus pacificus", "eopsetta jordani", "gadus macrocephalus", "sebastolobus altivelis", "sebastolobus alascanus", "hippoglossus stenolepis", "sebastes pinniger", "ophiodon elongatus", "sebastes crameri", "oncorhynchus keta", "oncorhynchus tshawytscha", "oncorhynchus gorbuscha", "atheresthes stomias", "merluccius productus", "sebastes entomelas", "squalus suckleyi","sebastes ruberrimus","sebastes maliger", "glyptocephalus zachirus", "hippoglossoides elassodon", "parophrys vetulus", "lepidopsetta bilineata", "sebastes aleutianus"))
View(species_biomass)
species_catch <- filter(catch, scientific_name %in% c("gadus chalcogrammus", "anoplopoma fimbria", "microstomus pacificus", "eopsetta jordani", "gadus macrocephalus", "sebastolobus altivelis", "sebastolobus alascanus", "hippoglossus stenolepis", "sebastes pinniger", "ophiodon elongatus", "sebastes crameri", "oncorhynchus keta", "oncorhynchus tshawytscha", "oncorhynchus gorbuscha", "atheresthes stomias", "merluccius productus", "sebastes entomelas", "squalus suckleyi","sebastes ruberrimus","sebastes maliger", "glyptocephalus zachirus", "hippoglossoides elassodon", "parophrys vetulus", "lepidopsetta bilineata", "sebastes aleutianus"))
View(species_catch)
