st_as_sf(coords=c('longitude','latitude'),crs=4326,remove = F) %>%
st_transform(crs = "+proj=utm +zone=10 +datum=WGS84 +units=km") %>%
mutate(X=st_coordinates(.)[,1],Y=st_coordinates(.)[,2])
plot(newdepth$longitude, newdepth$latitude)
# restrict latitude and longitude
newdepth <- newdepth %>%
filter(latitude <= maxlat_region, longitude >=minlon_region, noaadepth <= 1.1 * maxdepth )
plot(newdepth$longitude, newdepth$latitude)
minlon_region
min(dfo_south$longitude)
points(dfo_south$longitude, dfo_south$latitude, col = "red")
plot(newdepth$longitude, newdepth$latitude, ylim = c(20, 60))
points(dfo_south$longitude, dfo_south$latitude, col = "red")
max(dfo_south$latitude)
# Tip Vancouver island to southern california
maxlat_region = 50.95
dfo_south <- dplyr::filter(dfo, latitude <=maxlat_region)
# get most western point of trawls in this region
minlon_region <- min(wcbts$longitude, dfo_south$longitude)
# pull out bathymetry data w/in this region
maxdepth <- max(dfo_south$depth, wcbts$depth)
# remove depths_sf rows that are above 0
depths_sf <- dplyr::filter(depths_sf, layer <0)
# create a dataframe of noaa bathymetry
tmp <- st_coordinates(depths_sf)
depthlist <- -depths_sf$layer
newdepth <- tibble(longitude = tmp[,1],
latitude = tmp[,2],
noaadepth = depthlist)
# restrict latitude and longitude
newdepth <- newdepth %>%
filter(latitude <= maxlat_region, longitude >=minlon_region, noaadepth <= 1.1 * maxdepth )
newdepth <- newdepth %>%
st_as_sf(coords=c('longitude','latitude'),crs=4326,remove = F) %>%
st_transform(crs = "+proj=utm +zone=10 +datum=WGS84 +units=km") %>%
mutate(X=st_coordinates(.)[,1],Y=st_coordinates(.)[,2])
newdepth <- as.data.frame(newdepth)
plot(newdepth$latitude, newdepth$latitude)
plot(newdepth$longitude, newdepth$latitude)
minlon
minlon_region
newdepth <- as.data.frame(newdepth)
spde <- make_mesh(newdepth, xy_cols = c("X", "Y"), n_knots = 250)
depth_model_1 <- sdmTMB(formula = log(noaadepth) ~ 1,
mesh = spde,
data = newdepth,
family = gaussian(),
spatial = "on",
anisotropy = TRUE)
10/60
# check w goa and dfo
goa_south <- dplyr::filter(dat, survey == "goa", latitude <= minlat_region)
############################################################
# N vancouver island to mid Chichagof
minlat_region = 50.95
maxlat_region = 57.45
# get trawl data in this region
minlon_region <- -136.6
# check w goa and dfo
goa_south <- dplyr::filter(dat, survey == "goa", latitude <= minlat_region)
# check w goa and dfo
goa_south <- dplyr::filter(dat, survey == "goa", latitude <= maxlat_region)
dfo_north <- dplyr::filter(dat, survey == "goa", latitude <= maxlat_region & latitude > minlat_rgion )
dfo_north <- dplyr::filter(dat, survey == "goa", latitude <= maxlat_region & latitude > minlat_region )
min(c(goa_south$longitude, dfo_north$longitude))
############################################################
# N vancouver island to mid Chichagof
minlat_region = 50.95
maxlat_region = 57.45
# get trawl data in this region
minlon_region <- -136.6
# check w goa and dfo
goa_south <- dplyr::filter(dat, survey == "goa", latitude <= maxlat_region)
dfo_north <- dplyr::filter(dat, survey == "goa", latitude <= maxlat_region & latitude > minlat_region )
min(c(goa_south$longitude, dfo_north$longitude))
plot(goa_south$longitude, goa_south$latitude)
# check w goa and dfo
goa_south <- dplyr::filter(dat, survey == "goa", latitude <= maxlat_region, longitude >= -140)
dfo_north <- dplyr::filter(dat, survey == "goa", latitude <= maxlat_region & latitude > minlat_region )
min(c(goa_south$longitude, dfo_north$longitude))
# check w goa and dfo
goa_south <- dplyr::filter(dat, survey == "goa", latitude <= maxlat_region, longitude >= -140)
dfo_north <- dplyr::filter(dat, survey == "goa", latitude <= maxlat_region & latitude > minlat_region )
plot(dfo_north$longitude, dfo_north$latitude)
dfo_north <- dplyr::filter(dat, survey == "dfo", latitude <= maxlat_region & latitude > minlat_region )
min(c(goa_south$longitude, dfo_north$longitude))
# good check!
# recreate newdepth
newdepth <- tibble(longitude = tmp[,1],
latitude = tmp[,2],
noaadepth = depthlist)
maxdepth <- max(c(goa_south$depth, dfo_north$depth)
)
maxdepth
# good check!
# recreate newdepth
newdepth <- tibble(longitude = tmp[,1],
latitude = tmp[,2],
noaadepth = depthlist)
maxdepth <- max(c(goa_south$depth, dfo_north$depth))
maxdepth <- max(c(goa_south$depth, dfo_north$depth))
# restrict latitude and longitude
newdepth <- newdepth %>%
filter(latitude <= maxlat_region, latitude > minlat_region,
longitude >=minlon_region,
noaadepth <= 1.1 * maxdepth )
newdepth <- newdepth %>%
st_as_sf(coords=c('longitude','latitude'),crs=4326,remove = F) %>%
st_transform(crs = "+proj=utm +zone=10 +datum=WGS84 +units=km") %>%
mutate(X=st_coordinates(.)[,1],Y=st_coordinates(.)[,2])
newdepth <- as.data.frame(newdepth)
spde <- make_mesh(newdepth, xy_cols = c("X", "Y"), n_knots = 250)
depth_model_2 <- sdmTMB(formula = log(noaadepth) ~ 1,
mesh = spde,
data = newdepth,
family = gaussian(),
spatial = "on",
anisotropy = TRUE)
bc_s_ak <- list(latrange = range(newdepth$latitude),
lonrange = range(newdepth$longitude),
maxdepth = maxdepth,
spde = spde,
depth_model = depth_model_2)
n_goa <- dplyr::filter(dat, survey == "goa",
longitude < -136.6)
plot(n_goa$longitude, n_goa$latitude)
1300
######## More complex, E gulf of alaska
minlat_region <-57.45
minlon_region <- -155
maxlat_region <- 61.5
maxlon_region <- 136.6
newdepth <- tibble(longitude = tmp[,1],
latitude = tmp[,2],
noaadepth = depthlist)
maxdepth <- max(c(goa_south$depth, dfo_north$depth))
# restrict latitude and longitude
newdepth <- newdepth %>%
filter(latitude <= maxlat_region,
latitude > minlat_region,
longitude >=minlon_region,
longitude < maxlon_region
noaadepth <= 1.1 * maxdepth )
# restrict latitude and longitude
newdepth <- newdepth %>%
filter(latitude <= maxlat_region,
latitude > minlat_region,
longitude >=minlon_region,
longitude < maxlon_region,
noaadepth <= 1.1 * maxdepth )
newdepth <- newdepth %>%
st_as_sf(coords=c('longitude','latitude'),crs=4326,remove = F) %>%
st_transform(crs = "+proj=utm +zone=10 +datum=WGS84 +units=km") %>%
mutate(X=st_coordinates(.)[,1],Y=st_coordinates(.)[,2])
newdepth <- as.data.frame(newdepth)
newdepth$longitude, newdepth$latitude)
plot(newdepth$longitude, newdepth$latitude)
spde <- make_mesh(newdepth, xy_cols = c("X", "Y"), n_knots = 250)
depth_model_3 <- sdmTMB(formula = log(noaadepth) ~ 1,
mesh = spde,
data = newdepth,
family = gaussian(),
spatial = "on",
anisotropy = TRUE)
######## More complex, E gulf of alaska
minlat_region <-57.45
minlon_region <- -156
maxlat_region <- 61.5
maxlon_region <- 136.6
newdepth <- tibble(longitude = tmp[,1],
latitude = tmp[,2],
noaadepth = depthlist)
maxdepth <- max(c(goa_south$depth, dfo_north$depth))
# restrict latitude and longitude
newdepth <- newdepth %>%
filter(latitude <= maxlat_region,
latitude > minlat_region,
longitude >=minlon_region,
longitude < maxlon_region,
noaadepth <= 1.1 * maxdepth )
newdepth <- newdepth %>%
st_as_sf(coords=c('longitude','latitude'),crs=4326,remove = F) %>%
st_transform(crs = "+proj=utm +zone=10 +datum=WGS84 +units=km") %>%
mutate(X=st_coordinates(.)[,1],Y=st_coordinates(.)[,2])
newdepth <- as.data.frame(newdepth)
spde <- make_mesh(newdepth, xy_cols = c("X", "Y"), n_knots = 250)
plot(newdepth$longitude, newdepth$latitude)
minlat_region1 <-57.45
maxlat_region1 <- 61.5
minlon_region1 <- -145
maxlon_region1 <- -136.6
minlat_region2 <- 55
maxlat_region2 <- 61.5
minlon_region2 <- -156
maxlon_region2 <- minlon_region1
newdepth <- tibble(longitude = tmp[,1],
latitude = tmp[,2],
noaadepth = depthlist)
# restrict latitude and longitude
newdepth <- newdepth %>%
filter(((latitude <= maxlat_region1 &
latitude <- minlat_region1 &
longitude >= minlon_region1 &
longitude < maxlon_region1) |
(latitude <= maxlat_region2 &
latitude <- minlat_region2 &
longitude >= minlon_region2 &
longitude < maxlon_region2)
), noaadepth <= 1.1 * maxdepth )
# restrict latitude and longitude
newdepth <- newdepth %>%
filter(((latitude <= maxlat_region1 &
latitude < minlat_region1 &
longitude >= minlon_region1 &
longitude < maxlon_region1) |
(latitude <= maxlat_region2 &
latitude < minlat_region2 &
longitude >= minlon_region2 &
longitude < maxlon_region2)),
noaadepth <= 1.1 * maxdepth
)
plot(newdepth$longitude, newdepth$latitude)
newdepth <- tibble(longitude = tmp[,1],
latitude = tmp[,2],
noaadepth = depthlist)
# restrict latitude and longitude
newdepth <- newdepth %>%
filter(((latitude <= maxlat_region1 &
latitude < minlat_region1 &
longitude >= minlon_region1 &
longitude < maxlon_region1)),
noaadepth <= 1.1 * maxdepth
)
plot(newdepth$longitude, newdepth$latitude)
minlat_region1 <-57.45
maxlat_region1 <- 61.5
minlon_region1 <- -145
maxlon_region1 <- -136.6
minlat_region2 <- 55
maxlat_region2 <- 61.5
minlon_region2 <- -156
maxlon_region2 <- minlon_region1
newdepth <- tibble(longitude = tmp[,1],
latitude = tmp[,2],
noaadepth = depthlist)
# restrict latitude and longitude
newdepth <- newdepth %>%
filter(((latitude <= maxlat_region1 &
latitude < minlat_region1 &
longitude >= minlon_region1 &
longitude < maxlon_region1)),
noaadepth <= 1.1 * maxdepth
)
plot(newdepth$longitude, newdepth$latitude)
newdepth <- tibble(longitude = tmp[,1],
latitude = tmp[,2],
noaadepth = depthlist)
# restrict latitude and longitude
newdepth <- newdepth %>%
filter(((latitude <= maxlat_region1 &
latitude > minlat_region1 &
longitude > minlon_region1 &
longitude <= maxlon_region1)),
noaadepth <= 1.1 * maxdepth
)
plot(newdepth$longitude, newdepth$latitude)
newdepth <- tibble(longitude = tmp[,1],
latitude = tmp[,2],
noaadepth = depthlist)
# restrict latitude and longitude
newdepth <- newdepth %>%
filter(((latitude <= maxlat_region1 &
latitude > minlat_region1 &
longitude > minlon_region1 &
longitude <= maxlon_region1)) |
((latitude <= maxlat_region2 &
latitude > minlat_region2 &
longitude > minlon_region2 &
longitude <= maxlon_region2)),
noaadepth <= 1.1 * maxdepth
)
plot(newdepth$longitude, newdepth$latitude)
newdepth <- newdepth %>%
st_as_sf(coords=c('longitude','latitude'),crs=4326,remove = F) %>%
st_transform(crs = "+proj=utm +zone=10 +datum=WGS84 +units=km") %>%
mutate(X=st_coordinates(.)[,1],Y=st_coordinates(.)[,2])
newdepth <- as.data.frame(newdepth)
spde <- make_mesh(newdepth, xy_cols = c("X", "Y"), n_knots = 250)
depth_model_3 <- sdmTMB(formula = log(noaadepth) ~ 1,
mesh = spde,
data = newdepth,
family = gaussian(),
spatial = "on",
anisotropy = TRUE)
e_goa <- list(latrange = range(newdepth$latitude),
lonrange = range(newdepth$longitude),
maxdepth = maxdepth,
spde = spde,
depth_model = depth_model_3)
w_goa <- list(latrange = range(newdepth$latitude),
lonrange = range(newdepth$longitude),
maxdepth = maxdepth,
spde = spde,
depth_model = depth_model_3)
min(wcbts$longitude, dfo_south$longitude)
longrange
lonrange <- range(dat_noiphc$longitude)
lonrange
latrange
maxlat_region <-62.78250
minlat_region <- 50
maxlon_region <- -156
minlon_region <- -180
# restrict latitude and longitude
newdepth <- newdepth %>%
filter(latitude <= maxlat_region,
latitude > minlat_region,
longitude >=minlon_region,
longitude < maxlon_region,
noaadepth <= 1.1 * maxdepth )
newdepth <- newdepth %>%
st_as_sf(coords=c('longitude','latitude'),crs=4326,remove = F) %>%
st_transform(crs = "+proj=utm +zone=10 +datum=WGS84 +units=km") %>%
mutate(X=st_coordinates(.)[,1],Y=st_coordinates(.)[,2])
depth_df <- tibble(longitude = tmp[,1],
latitude = tmp[,2],
noaadepth = depthlist)
### AIBS
maxlat_region <-62.78250
minlat_region <- 50
maxlon_region <- -156
minlon_region <- -180
# restrict latitude and longitude
newdepth <- depth_df %>%
filter(latitude <= maxlat_region,
latitude > minlat_region,
longitude >=minlon_region,
longitude < maxlon_region,
noaadepth <= 1.1 * maxdepth )
newdepth <- newdepth %>%
st_as_sf(coords=c('longitude','latitude'),crs=4326,remove = F) %>%
st_transform(crs = "+proj=utm +zone=10 +datum=WGS84 +units=km") %>%
mutate(X=st_coordinates(.)[,1],Y=st_coordinates(.)[,2])
newdepth <- as.data.frame(newdepth)
plot(newdepth$longitude, newdepth$latitude)
spde <- make_mesh(newdepth, xy_cols = c("X", "Y"), n_knots = 250)
spde <- make_mesh(newdepth, xy_cols = c("X", "Y"), n_knots = 300)
depth_model_4 <- sdmTMB(formula = log(noaadepth) ~ 1,
mesh = spde,
data = newdepth,
family = gaussian(),
spatial = "on",
anisotropy = TRUE)
install.packages("concaveman")
library(concaveman)
library(tmap)
install.packages("tmap")
library(tmap)
data(points)
head(points)
summary(depth_model_4)
library(FishStatsUtils)
help("FishStatsUtils")
grid = make_extrapolation_info(c("eastern_bering_sea","northern_bering_sea"))
View(northern_bering_sea_grid)
help("make_extrapolation_info")
region <- "california_current"
data(paste(region, "_grid"))
data("california_current_grid")
paste(region, "_grid")
data(paste(region, "_grid"))
regiontext <= paste(region, "_grid")
regiontext <- paste(region, "_grid")
data(regiontext)
regiontext <- paste(region, "_grid")
data(regiontext)
data("california_current_grid")
library(tidyverse)
force(california_current_grid)
View(california_current_grid)
rm(list = ls())
# get all noaa bathymetry data within data range
# playground code for creating grids, extract data for UW west coast only
dat <- readRDS("data/processed_data/all_o2_dat.rds")
dat_noiphc <- dplyr::filter(dat, !survey == "iphc") # because this crosses over into Long E, creates problems with longitude range
latrange <- range(dat_noiphc$latitude)
lonrange <- range(dat_noiphc$longitude)
wcbts <- dplyr::filter(dat, survey == "nwfsc")
dfo <- dplyr::filter(dat, survey == "dfo")
noaa_depths <- getNOAA.bathy(lon1 = lonrange[1],
lon2 = 117,
lat1 = latrange[1],
lat2 = l32,
resolution = 4,
keep = TRUE)
noaa_depths <- getNOAA.bathy(lon1 = lonrange[1],
lon2 = -117,
lat1 = latrange[1],
lat2 = 32,
resolution = 4,
keep = TRUE)
plot(noaa_depths)
data("california_current_grid")
dat.2.use <- california_current_grid
depths_sp <- as.SpatialGridDataFrame(noaa_depths)
depths_sf <- st_as_sf(depths_sp, crs = st_crs(4326))
help("st_join")
dat.2.use <- dat.2.use %>%
rename(longitude = Lon,
latitude = Lat)
dat.2.use_sf <- st_as_sf(dat.2.use, coords = c("longitude", "latitude"), crs = st_crs(4326))
depths_in_region <- st_join(dat.2.use_sf,
y = depths_sf,
join = st_overlaps)
depths_in_region <- st_join(y= dat.2.use_sf,
x = depths_sf,
join = st_overlaps)
plot(depths_in_region)
depths_in_region <- st_join(y= dat.2.use_sf,
x = depths_sf,
join = st_intersects)
depths_in_region <- st_join(x= dat.2.use_sf,
y = depths_sf,
join = st_intersects)
plot(depths_in_region)
depths_in_region <- st_join(y= dat.2.use_sf,
x = depths_sf,
join = st_intersects)
my_hull <- st_convex_hull(st_union(dat.2.use_sf))
depths_in_region <- st_join(y= my_hull,
x = depths_sf,
join = st_intersects)
my_hull <- st_convex_hull(st_union(dat.2.use_sf))
plot(my_hull)
poly <- st_convex_hull(st_union(dat.2.use_sf))
depths_in_region <- good_points <- st_join(depths_sf,poly,join=st_within)
poly_sf <- st_as_sf(poly)
depths_in_region <- good_points <- st_join(depths_sf,poly_sf,join=st_within)
plot(poly_sf)
plot(poly_sf)
depths_in_region <- st_filter(depths_sf,poly_sf,join=st_within)
depths_in_region <- st_filter(depths_sf,poly,join=st_within)
depths_in_region <- st_filter(depths_sf,poly)
depths_in_region
dat.2.use_sf <- st_as_sf(dat.2.use, coords = c("longitude", "latitude"), crs = st_crs(4326))
poly <- st_convex_hull(st_union(dat.2.use_sf))
poly_sf <- st_as_sf(poly, coords = c("longitude", "latitude"), crs = st_crs(4326))
depths_in_region <- st_filter(depths_sf,poly)
plot(depths_in_region)
poly
plot(poly_sf)
plot(poly)
dat.2.use <- california_current_grid
dat.2.use <- dat.2.use %>%
rename(longitude = Lon,
latitude = Lat)
dat.2.use_sf <- st_as_sf(dat.2.use, coords = c("longitude", "latitude"), crs = st_crs(4326))
plot(dat.2.use$longitude, dat.2.use$latitude)
plot(poly, new = F)
poly <- st_convex_hull((dat.2.use_sf))
plot(poly)
poly <- st_convex_hull(st_union(dat.2.use_sf))
help(st_filter)
depths_in_region <- st_filter(depths_sf,poly, join = st_intersects)
dat.2.use_sf <- st_as_sf(dat.2.use, coords = c("longitude", "latitude"), crs = st_crs(4326))
poly <- st_convex_hull(st_union(dat.2.use_sf))
depths_in_region <- st_filter(depths_sf,poly, join = st_intersects)
depths_in_region <- st_filter(depths_sf,poly)
dat.2.use <- california_current_grid
# rename Lat and Lon
dat.2.use <- dat.2.use %>%
rename(lon = Lon,
lat = Lat)
# make grid a sf object
dat.2.use_sf <- st_as_sf(dat.2.use, coords = c("longitude", "latitude"), crs = st_crs(4326))
View(dat.2.use_sf)
# create polygon covering extent of grid
poly <- st_convex_hull(st_union(dat.2.use_sf))
depths_in_region <- st_filter(depths_sf,poly)
tmp <- st_coordinates(depths_sf)
depthlist <- -depths_sf$layer
depth_df <- tibble(longitude = tmp[,1],
latitude = tmp[,2],
noaadepth = depthlist)
depth_df <- tibble(longitude = tmp[,1],
latitude = tmp[,2],
noaadepth = depthlist)
newdepth <- depths_df %>%
st_as_sf(coords=c('longitude','latitude'),crs=4326,remove = F) %>%
st_transform(crs = "+proj=utm +zone=10 +datum=WGS84 +units=km")
tmp <- st_coordinates(depths_sf)
depthlist <- -depths_sf$layer
depth_df <- tibble(longitude = tmp[,1],
latitude = tmp[,2],
noaadepth = depthlist)
newdepth <- depth_df %>%
st_as_sf(coords=c('longitude','latitude'),crs=4326,remove = F) %>%
st_transform(crs = "+proj=utm +zone=10 +datum=WGS84 +units=km")
depths_in_region <- st_filter(newdepth,poly)
newdepth_sf <- st_as_sf(newdepth, , coords = c("longitude", "latitude"), crs = st_crs(4326)))
grid.2.use <- california_current_grid
# rename Lat and Lon
grid.2.use <- grid.2.use %>%
rename(lon = Lon,
lat = Lat)
# make grid a sf object
grid.2.use_sf <- st_as_sf(grid.2.use, coords = c("longitude", "latitude"), crs = st_crs(4326))
# make grid a sf object
grid.2.use_sf <- st_as_sf(grid.2.use, coords = c("lon", "lat"), crs = st_crs(4326))
# create polygon covering extent of grid
poly <- st_convex_hull(st_union(dat.2.use_sf))
depths_in_region <- st_filter(depths_sf,poly)
