nc_df <- as.data.frame(cbind(coords, var1))
names(nc_df) <- c("lon", "lat", "depth", "time", "po2")
return(nc_df)
}
?mclapply
o2 <- mclapply(files, extract_info)
View(o2)
View(o2)
weighted_average <- readRDS("~/Library/CloudStorage/Dropbox/Pollock/for_github/data/model_processed_outputs/weighted_average.rds")
View(weighted_average)
model_index_weight <- readRDS("~/Library/CloudStorage/Dropbox/Pollock/for_github/data/model_processed_outputs/model_index_weight.rds")
View(model_index_weight)
View(weighted_average)
library(devtools)
install.packages("Matrix", dependencies=TRUE, force=TRUE)
install.packages("tidyverse")
library(tidyverse)
install.packages("tidync")
library(tidync)
install.packages("ncdf4")
library(ncdf4)
library(raster)
install.packages("lubridate")
library(lubridate)
library(dplyr)
library(parallel)
install.packages("ncdf4.helpers")
library(ncdf4.helpers)
library(RANN)
library(ggplot2)
library(here)
library(readxl)
####Set wd
setwd("~/Dropbox/choke species/code/Copernicus/temp_sal/jindivero/zone1")
####Zone 1 (West Coast)
###Load haul info for NOAA West Coast and IPHC
load("/Users/jindiv/Library/CloudStorage/Dropbox/choke species/code/choke-species-data/data/fish_raw/NOAA/nwfsc_haul.rda")
IPHC <-  read_excel("~/Dropbox/choke species/code/choke-species-data/data/fish_raw/IPHC/IPHC_FISS_set_halibut.xlsx")
##Housekeeping
colnames(IPHC) <- tolower(colnames(IPHC))
IPHC <- IPHC[,c("stlkey", "date", "beginlat", "beginlon", "begindepth (fm)", "temp c", "salinity psu", "oxygen_ml", "oxygen_umol", "oxygen_sat")]
IPHC$lat_start <- IPHC$beginlat
IPHC$beginlat <- NULL
IPHC$lon_start <- IPHC$beginlon
IPHC$beginlon <- NULL
IPHC$depth_IPHC <- IPHC$`begindepth (fm)`
IPHC$`begindepth (fm)` <- NULL
##Combine
haul_combined <- bind_rows(nwfsc_haul, IPHC)
##More housekeeping
#Restrict to southern latitudes of interest
haul_combined <- subset(haul_combined, lat_start <49)
#Isolate just date
haul_combined$date2 <- as.POSIXct(substr(haul_combined$date, 1,11))
#Restrict to only years that we have GLORYS data for
haul_combined <- subset(haul_combined, date2>as.POSIXct("1993-01-01"))
nc_bottom_all2 <- readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/full_regions_bottom/glorys_tempsal_wc_full_region_bottom.rds")
##Find closest matching date
#List of all the days
date_glorys <- unique(nc_bottom_all2$time)
#Get index of the dates
date_index <- matrix(nrow=length(haul_combined$date2))
for(i in 1:length(haul_combined$date2)){
date_index[i] <- which(abs(date_glorys-haul_combined$date2[i]) == min(abs(date_glorys-haul_combined$date2[i])))
}
#Get the date of that index
date <- matrix(nrow=length(haul_combined$date2))
date_glorys <- as.character(unique(nc_bottom_all2$time))
for(i in 1:length(haul_combined$date2)){
date[i] <- date_glorys[date_index[i]]
}
#Subset data for those dates
nc_bottom_all2$time <- as.character(nc_bottom_all2$time)
nc_bottom_all3 <- filter(nc_bottom_all2, time %in% date)
#Extract out for each haul the closest matching lat and lon
# use nn2() to calculate min distance to nearest ROMS lat/long for each date
test <- RANN::nn2(nc_bottom_all3[, c('latitude', 'longitude')], haul_combined[, c('lat_start', "lon_start")],k = 1)
points <- nc_bottom_all3[c(test$nn.idx),c("latitude", "longitude")]
#Combine date and coordinates
points$time <- as.vector(date)
#Extract data
nc_bottom_all4 <- left_join(points, nc_bottom_all3)
colnames(nc_bottom_all4) <- c("lat_glorysphys", "lon_glorysphys", "date_glorysphys", "temp_glorys", "sal_glorys", "depth_glorysphys")
glorys_wc <- bind_cols(nc_bottom_all4, haul_combined)
View(glorys_wc)
saveRDS(glorys_wc, file="glorys_tempsal_WC.rds")
nc_bottom_all2 <- as.data.frame(readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/full_regions_bottom/glorys_o2_wc_full_region_bottom.rds"))
#Extract out for each haul the closest matching lat and lon
# use nn2() to calculate min distance to nearest ROMS lat/long for each date
test <- RANN::nn2(nc_bottom_all2[, c('latitude', 'longitude')], haul_combined[, c('lat_start', "lon_start")],k = 1)
points <- nc_bottom_all2[c(test$nn.idx),c("latitude", "longitude")]
#Combine date and coordinates
points$time <- as.character(haul_combined$date2)
#Extract data
nc_bottom_all2$time <- as.character(as.Date(nc_bottom_all2$time, format='%m/%d/%Y'))
nc_bottom_all2 <- unique(nc_bottom_all2)
colnames(nc_bottom_all2) <- c("no3_glorys", "o2_glorys", "po4_glorys", "chl_glorys", "si_glorys", "nppv_glorys", "lon_gloryso2", "lat_gloryso2", "depth_gloryso2", "date_gloryso2")
colnames(points) <- c("lat_gloryso2", "lon_gloryso2", "date_gloryso2")
nc_bottom_all4 <- left_join(points, nc_bottom_all2)
glorys_wc <- bind_cols(nc_bottom_all4, haul_combined)
View(glorys_wc)
saveRDS(glorys_wc, file="glorys_o2_WC.rds")
####BC
###Load haul info for BC and IPHC
pbs_haul <- readRDS("/Users/jindiv/Library/CloudStorage/Dropbox/choke species/code/choke-species-data/data/fish_raw/BC/pbs-haul.rds")
IPHC <- read_excel("~/Dropbox/choke species/code/choke-species-data/data/fish_raw/IPHC/iphc-2023-fiss-hadj-20231031.xlsx")
##Housekeeping
pbs_haul$performance <- as.character(pbs_haul$performance)
####BC
###Load haul info for BC and IPHC
pbs_haul <- readRDS("/Users/jindiv/Library/CloudStorage/Dropbox/choke species/code/choke-species-data/data/fish_raw/BC/pbs-haul.rds")
IPHC <-  read_excel("~/Dropbox/choke species/code/choke-species-data/data/fish_raw/IPHC/IPHC_FISS_set_halibut.xlsx")
##Housekeeping
colnames(IPHC) <- tolower(colnames(IPHC))
IPHC <- IPHC[,c("stlkey", "date", "beginlat", "beginlon", "begindepth (fm)", "temp c", "salinity psu", "oxygen_ml", "oxygen_umol", "oxygen_sat")]
IPHC$lat_start <- IPHC$beginlat
IPHC$beginlat <- NULL
IPHC$lon_start <- IPHC$beginlon
IPHC$beginlon <- NULL
IPHC$depth_IPHC <- IPHC$`begindepth (fm)`
IPHC$`begindepth (fm)` <- NULL
##Combine
haul_combined <- bind_rows(pbs_haul, IPHC)
haul_combined <- subset(haul_combined, lat_start >47 & lat_start< 55)
#Isolate just date
haul_combined$date2 <- as.POSIXct(substr(haul_combined$date, 1,11))
#Restrict to only years that we have GLORYS data for
haul_combined <- subset(haul_combined, date2>as.POSIXct("1993-01-01"))
###GLORYS Temperature and salinity
####Set wd
setwd("~/Dropbox/choke species/code/Copernicus/temp_sal/jindivero/zone3")
nc_bottom_all2 <- readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/full_regions_bottom/glorys_tempsal_bc_full_region_bottom.rds")
##Find closest matching date
#List of all the days
date_glorys <- unique(nc_bottom_all2$time)
#Get index of the dates
date_index <- matrix(nrow=length(haul_combined$date2))
for(i in 1:length(haul_combined$date2)){
date_index[i] <- which(abs(date_glorys-haul_combined$date2[i]) == min(abs(date_glorys-haul_combined$date2[i])))
}
#Get the date of that index
date <- matrix(nrow=length(haul_combined$date2))
date_glorys <- as.character(unique(nc_bottom_all2$time))
for(i in 1:length(haul_combined$date2)){
date[i] <- date_glorys[date_index[i]]
}
#Subset data for those dates
nc_bottom_all2$time <- as.character(nc_bottom_all2$time)
nc_bottom_all3 <- filter(nc_bottom_all2, time %in% date)
#Extract out for each haul the closest matching lat and lon
# use nn2() to calculate min distance to nearest ROMS lat/long for each date
test <- RANN::nn2(nc_bottom_all3[, c('latitude', 'longitude')], haul_combined[, c('lat_start', "lon_start")],k = 1)
points <- nc_bottom_all3[c(test$nn.idx),c("latitude", "longitude")]
#Combine date and coordinates
points$time <- as.vector(date)
#Extract data
nc_bottom_all4 <- left_join(points, nc_bottom_all3)
colnames(nc_bottom_all4) <- c("lat_glorysphys", "lon_glorysphys", "date_glorysphys", "temp_glorys", "sal_glorys", "depth_glorysphys")
glorys_wc <- bind_cols(nc_bottom_all4, haul_combined)
saveRDS(glorys_wc, file="glorys_tempsal_BC.rds")
glorys_bc <- bind_cols(nc_bottom_all4, haul_combined)
saveRDS(glorys_bc, file="glorys_tempsal_BC.rds")
saveRDS(glorys_bc, file="glorys_tempsal_BC.rds")
nc_bottom_all2 <- readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/full_regions_bottom/glorys_o2_bc_full_region_bottom.rds")
#Extract out for each haul the closest matching lat and lon
# use nn2() to calculate min distance to nearest ROMS lat/long for each date
test <- RANN::nn2(nc_bottom_all2[, c('latitude', 'longitude')], haul_combined[, c('lat_start', "lon_start")],k = 1)
points <- nc_bottom_all2[c(test$nn.idx),c("latitude", "longitude")]
#Combine date and coordinates
points$time <- as.character(haul_combined$date2)
#Extract data
nc_bottom_all2$time <- as.character(as.Date(nc_bottom_all2$time, format='%m/%d/%Y'))
nc_bottom_all2 <- unique(nc_bottom_all2)
nc_bottom_all4 <- left_join(points, nc_bottom_all2)
colnames(nc_bottom_all4) <- c("lat_gloryso2", "lon_gloryso2", "date_gloryso2", "no3_glorys", "o2_glorys", "po4_glorys", "chl_glorys","si_glorys", "nppv_glorys", "depth_gloryso2")
glorys_bc <- bind_cols(nc_bottom_all4, haul_combined)
saveRDS(glorys_bc, file="glorys_o2_BC.rds")
gc()
setwd("~/Dropbox/choke species/code/choke-species-data/code/wa_state")
###Haul data
IPHC <-  read_excel("~/Dropbox/choke species/code/choke-species-data/data/fish_raw/IPHC/IPHC_FISS_set_halibut.xlsx")
bio2 <-readRDS("~/Dropbox/choke species/code/choke-species-data/data/fish_raw/NOAA/ak_bts_goa_ebs_nbs_all_levels.RDS")
haul <- bio2$haul
##Housekeeping
colnames(haul) <- tolower(colnames(haul))
colnames(IPHC) <- tolower(colnames(IPHC))
IPHC <- IPHC[,c("stlkey", "date", "beginlat", "beginlon", "begindepth (fm)", "temp c", "salinity psu", "oxygen_ml", "oxygen_umol", "oxygen_sat")]
IPHC$lat_start <- IPHC$beginlat
IPHC$beginlat <- NULL
IPHC$lon_start <- IPHC$beginlon
IPHC$beginlon <- NULL
IPHC$depth_IPHC <- IPHC$`begindepth (fm)`
IPHC$`begindepth (fm)` <- NULL
haul <- haul[,c("hauljoin", "start_time", "start_latitude", "start_longitude", "bottom_depth", "gear_temperature")]
colnames(haul) <- c("hauljoin", "date", "lat_start", "lon_start", "bottom_depth", "gear_temperature")
##Combine
haul_combined <- bind_rows(haul, IPHC)
##More housekeeping
#Restrict to northern latitudes of interest
min(haul$lat_start)
haul_combined <- subset(haul_combined, lat_start >51)
#Isolate just date
haul_combined$date2 <- as.POSIXct(substr(haul_combined$date, 1,11))
#Restrict to only years that we have ROMS data for
haul_combined <- subset(haul_combined, date2>as.POSIXct("1993-01-01"))
nc_bottom_all <- readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/full_regions_bottom/glorys_o2_ak_full_region_bottom.rds")
nc_bottom_all <- readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/full_regions_bottom/glorys_o2_ak_full_region_bottom.rds")
nc_bottom_all_b <- readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/full_regions_bottom/glorys_o2_ak2_full_region_bottom.rds")
nc_bottom_all2 <- readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/full_regions_bottom/glorys_o2_akcombinededited_full_region_bottom.rds")
nc_bottom_all2 <- readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/full_regions_bottom/glorys_o2_ak_combinededited_full_region_bottom.rds")
#Extract out for each haul the closest matching lat and lon
# use nn2() to calculate min distance to nearest ROMS lat/long for each date
test <- RANN::nn2(nc_bottom_all2[, c('latitude', 'longitude')], haul_combined[, c('lat_start', "lon_start")],k = 1)
points <- nc_bottom_all2[c(test$nn.idx),c("latitude", "longitude")]
#Combine date and coordinates
points$time <- as.Date(haul_combined$date2)
nc_bottom_all4 <- left_join(points, nc_bottom_all2)
colnames(nc_bottom_all4) <- c("lat_gloryso2", "lon_gloryso2", "date_gloryso2", "no3_glorys", "o2_glorys", "po4_glorys", "chl_glorys","si_glorys", "nppv_glorys", "depth_gloryso2")
glorys_o2_ak <- bind_cols(nc_bottom_all4, haul_combined)
saveRDS(glorys_o2_ak, file="glorys_o2_AK.rds")
setwd("~/Dropbox/choke species/code/choke-species-data/code/wa_state")
#Load all glorys datasets
o2_ak <- readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/glorys_hauls/glorys_o2_AK.rds")
o2_bc <- readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/glorys_hauls/glorys_o2_BC.rds")
o2_wc <- readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/glorys_hauls/glorys_o2_WC.rds")
#ts_ak <- readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/glorys_hauls/glorys_tempsal_AK.rds")
ts_bc <- readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/glorys_hauls/glorys_tempsal_BC.rds")
ts_wc <- readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/glorys_hauls/glorys_tempsal_WC.rds")
##Temp and sal
#Clean up
ts_ak$event_id <- ts_ak$hauljoin
ts_ak$hauljoin <- NULL
ts_wc <- ts_wc[,c(1:8,12:13,16,20:28)]
#Combine
#dat_phys <- bind_rows(ts_ak, ts_bc, ts_wc)
dat_phys <- bind_rows(ts_bc, ts_wc)
dat_phys$id <- rownames(dat_phys)
#Clean up more
dat_phys$year <- NULL
dat_phys$date_haul <- dat_phys$date2
dat_phys$date2 <- NULL
dat_phys$date <- NULL
dat_phys <- as.data.frame(dat_phys)
o2_wc <- o2_wc[,c(1:12,16:17,20,24:32)]
##Oxygen
#Clean up
o2_ak$date_gloryso2 <- as.character(o2_ak$date_gloryso2)
o2_ak$event_id <- o2_ak$hauljoin
o2_ak$hauljoin <- NULL
#Combine
dat_o2 <- bind_rows(o2_ak, o2_bc, o2_wc)
dat_o2$id <- rownames(dat_o2)
#Clean more
dat_o2$year <- NULL
dat_o2$date_haul <- dat_o2$date2
dat_o2$date2 <- NULL
dat_o2$date <- NULL
dat_o2 <- as.data.frame(dat_o2)
#Load all glorys datasets
o2_ak <- readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/glorys_hauls/glorys_o2_AK.rds")
o2_bc <- readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/glorys_hauls/glorys_o2_BC.rds")
o2_wc <- readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/glorys_hauls/glorys_o2_WC.rds")
##Oxygen
#Clean up
o2_ak$date_gloryso2 <- as.character(o2_ak$date_gloryso2)
o2_ak$event_id <- o2_ak$hauljoin
o2_ak$hauljoin <- NULL
o2_wc <- o2_wc[,c(1:12,16:17,20,24:32)]
o2_bc <- o2_bc[c,1:12, 16:17, 20, 24:31)]
o2_bc <- o2_bc[c,(1:12, 16:17, 20, 24:31)]
o2_bc <- o2_bc[,c(1:12, 16:17, 20, 24:31)]
#Combine
dat_o2 <- bind_rows(o2_ak, o2_bc, o2_wc)
dat_o2$id <- rownames(dat_o2)
#Clean more
dat_o2$year <- NULL
dat_o2$date_haul <- dat_o2$date2
dat_o2$date2 <- NULL
dat_o2$date <- NULL
dat_o2 <- as.data.frame(dat_o2)
##Combine phys and oxygen data
dat <- left_join(dat_o2, dat_phys, by=c("id", "lat_start", "lon_start", "date_haul", "depth_m", "bottom_temp_c", "bottom_depth", "gear_temperature", "stlkey", "event_id", "survey_name", "temp c", "salinity psu", "oxygen_ml", "oxygen_sat", "depth_IPHC", ""))
#Combine
#dat_phys <- bind_rows(ts_ak, ts_bc, ts_wc)
dat_phys <- bind_rows(ts_bc, ts_wc)
dat_phys$id <- rownames(dat_phys)
#Clean up more
dat_phys$year <- NULL
dat_phys$date_haul <- dat_phys$date2
dat_phys$date2 <- NULL
dat_phys$date <- NULL
dat_phys <- as.data.frame(dat_phys)
dat <- left_join(dat_o2, dat_phys, by=c("id", "lat_start", "lon_start", "date_haul", "depth_m", "bottom_depth", "gear_temperature", "stlkey", "event_id", "survey_name", "temp c", "salinity psu", "oxygen_ml", "oxygen_sat", "depth_IPHC", ""))
rlang::last_trace()
dat <- left_join(dat_o2, dat_phys, by=c("id", "lat_start", "lon_start", "date_haul", "depth_m", "bottom_temp_c", "stlkey", "event_id", "survey_name", "temp c", "salinity psu", "oxygen_ml", "oxygen_sat", "depth_IPHC", ""))
ts_bc <- ts_bc[,c(1:8, 12:13, 16, 20:27)]
#Combine
#dat_phys <- bind_rows(ts_ak, ts_bc, ts_wc)
dat_phys <- bind_rows(ts_bc, ts_wc)
dat_phys$id <- rownames(dat_phys)
#Clean up more
dat_phys$year <- NULL
dat_phys$date_haul <- dat_phys$date2
dat_phys$date2 <- NULL
dat_phys$date <- NULL
dat_phys <- as.data.frame(dat_phys)
dat <- left_join(dat_o2, dat_phys, by=c("id", "lat_start", "lon_start", "date_haul", "depth_m", "bottom_temp_c", "stlkey", "event_id", "survey_name", "temp c", "salinity psu", "oxygen_ml", "oxygen_sat", "depth_IPHC", ""))
dat <- left_join(dat_o2, dat_phys, by=c("id", "lat_start", "lon_start", "date_haul", "depth_m", "bottom_temp_c", "stlkey", "event_id", "survey_name", "temp c", "salinity psu", "oxygen_ml", "oxygen_sat", "depth_IPHC"))
View(dat)
###Distance of haul from GLORYS point
##Oxygen
test <- matrix(nrow=nrow(dat))
for(i in 1:nrow(dat)){
dist <- spDistsN1(as.matrix(dat[i,c("lon_start", "lat_start")]),as.matrix(dat[i,c("lon_gloryso2", "lat_gloryso2")]),longlat=FALSE)
test[i] <- dist
}
dat$dist_o2 <- test
##Temp-sal
test <- matrix(nrow=nrow(dat))
for(i in 1:nrow(dat)){
dist <- spDistsN1(as.matrix(dat[i,c("lon_start", "lat_start")]),as.matrix(dat[i,c("lon_glorysphys", "lat_glorysphys")]),longlat=FALSE)
test[i] <- dist
}
for(i in 1:nrow(dat)){
if(!is.na(dat$lat_glorysphys[i])){
dist <- spDistsN1(as.matrix(dat[i,c("lon_start", "lat_start")]),as.matrix(dat[i,c("lon_glorysphys", "lat_glorysphys")]),longlat=FALSE)
test[i] <- dist
}
}
View(test)
##Temp-sal
dat2 <- subset(dat, !is.na(dat$lat_glorysphys))
View(ts_bc)
View(dat)
#Load all glorys datasets
o2_ak <- readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/glorys_hauls/glorys_o2_AK.rds")
o2_bc <- readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/glorys_hauls/glorys_o2_BC.rds")
o2_wc <- readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/glorys_hauls/glorys_o2_WC.rds")
#ts_ak <- readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/glorys_hauls/glorys_tempsal_AK.rds")
ts_bc <- readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/glorys_hauls/glorys_tempsal_BC.rds")
ts_wc <- readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/glorys_hauls/glorys_tempsal_WC.rds")
ts_wc <- ts_wc[,c(1:8,12:13,16,20:28)]
ts_bc <- ts_bc[,c(1:8, 12:13, 16, 20:27)]
#Combine
#dat_phys <- bind_rows(ts_ak, ts_bc, ts_wc)
dat_phys <- bind_rows(ts_bc, ts_wc)
dat_phys$id <- rownames(dat_phys)
#Clean up more
dat_phys$year <- NULL
dat_phys$date_haul <- dat_phys$date2
dat_phys$date2 <- NULL
dat_phys$date <- NULL
dat_phys <- as.data.frame(dat_phys)
##Oxygen
#Clean up
o2_ak$date_gloryso2 <- as.character(o2_ak$date_gloryso2)
o2_ak$event_id <- o2_ak$hauljoin
o2_ak$hauljoin <- NULL
o2_wc <- o2_wc[,c(1:12,16:17,20,24:32)]
o2_bc <- o2_bc[,c(1:12, 16:17, 20, 24:31)]
#Combine
dat_o2 <- bind_rows(o2_ak, o2_bc, o2_wc)
dat_o2$id <- rownames(dat_o2)
#Clean more
dat_o2$year <- NULL
dat_o2$date_haul <- dat_o2$date2
dat_o2$date2 <- NULL
dat_o2$date <- NULL
dat_o2 <- as.data.frame(dat_o2)
##Combine phys and oxygen data
#dat <- left_join(dat_o2, dat_phys, by=c("id", "lat_start", "lon_start", "date_haul", "depth_m", "bottom_temp_c", "bottom_depth", "gear_temperature", "stlkey", "event_id", "survey_name", "temp c", "salinity psu", "oxygen_ml", "oxygen_sat", "depth_IPHC", ""))
dat <- left_join(dat_o2, dat_phys, by=c("id", "lat_start", "lon_start", "date_haul", "depth_m", "bottom_temp_c", "stlkey", "event_id", "survey_name", "temp c", "salinity psu", "oxygen_ml","oxygen_umol", "oxygen_sat", "depth_IPHC"))
View(dat)
View(dat_phys)
View(dat_o2)
View(dat_phys)
#Load all glorys datasets
#o2_ak <- readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/glorys_hauls/glorys_o2_AK.rds")
o2_bc <- readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/glorys_hauls/glorys_o2_BC.rds")
o2_wc <- readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/glorys_hauls/glorys_o2_WC.rds")
#ts_ak <- readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/glorys_hauls/glorys_tempsal_AK.rds")
ts_bc <- readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/glorys_hauls/glorys_tempsal_BC.rds")
ts_wc <- readRDS("~/Dropbox/choke species/code/choke-species-data/data/glorys/glorys_hauls/glorys_tempsal_WC.rds")
##Temp and sal
#Clean up
#ts_ak$event_id <- ts_ak$hauljoin
#ts_ak$hauljoin <- NULL
ts_wc <- ts_wc[,c(1:8,12:13,16,20:28)]
ts_bc <- ts_bc[,c(1:8, 12:13, 16, 20:27)]
#Combine
#dat_phys <- bind_rows(ts_ak, ts_bc, ts_wc)
dat_phys <- bind_rows(ts_bc, ts_wc)
dat_phys$id <- rownames(dat_phys)
#Clean up more
dat_phys$year <- NULL
dat_phys$date_haul <- dat_phys$date2
dat_phys$date2 <- NULL
dat_phys$date <- NULL
dat_phys <- as.data.frame(dat_phys)
##Oxygen
#Clean up
#o2_ak$date_gloryso2 <- as.character(o2_ak$date_gloryso2)
#o2_ak$event_id <- o2_ak$hauljoin
#o2_ak$hauljoin <- NULL
o2_wc <- o2_wc[,c(1:12,16:17,20,24:32)]
o2_bc <- o2_bc[,c(1:12, 16:17, 20, 24:31)]
#Combine
dat_o2 <- bind_rows(o2_ak, o2_bc, o2_wc)
#Combine
dat_o2 <- bind_rows(o2_bc, o2_wc)
dat_o2$id <- rownames(dat_o2)
#Clean more
dat_o2$year <- NULL
dat_o2$date_haul <- dat_o2$date2
dat_o2$date2 <- NULL
dat_o2$date <- NULL
dat_o2 <- as.data.frame(dat_o2)
##Combine phys and oxygen data
#dat <- left_join(dat_o2, dat_phys, by=c("id", "lat_start", "lon_start", "date_haul", "depth_m", "bottom_temp_c", "bottom_depth", "gear_temperature", "stlkey", "event_id", "survey_name", "temp c", "salinity psu", "oxygen_ml", "oxygen_sat", "depth_IPHC", ""))
dat <- left_join(dat_o2, dat_phys, by=c("id", "lat_start", "lon_start", "date_haul", "depth_m", "bottom_temp_c", "stlkey", "event_id", "survey_name", "temp c", "salinity psu", "oxygen_ml","oxygen_umol", "oxygen_sat", "depth_IPHC"))
View(dat)
###Distance of haul from GLORYS point
##Oxygen
test <- matrix(nrow=nrow(dat))
for(i in 1:nrow(dat)){
dist <- spDistsN1(as.matrix(dat[i,c("lon_start", "lat_start")]),as.matrix(dat[i,c("lon_gloryso2", "lat_gloryso2")]),longlat=FALSE)
test[i] <- dist
}
dat$dist_o2 <- test
##Temp-sal
dat2 <- subset(dat, !is.na(dat$lat_glorysphys))
test <- matrix(nrow=nrow(dat))
for(i in 1:nrow(dat)){
dist <- spDistsN1(as.matrix(dat[i,c("lon_start", "lat_start")]),as.matrix(dat[i,c("lon_glorysphys", "lat_glorysphys")]),longlat=FALSE)
test[i] <- dist
}
dat$dist_phys <- test
## Plot
ggplot(dat, aes(x=dist_o2))+geom_histogram()
ggplot(dat, aes(x=dist_phys))+geom_histogram()
#Look into what is happening with those huge distance ones...
dat2 <- subset(dat, dist_o2>1 | dist_phys>1)
View(dat2)
View(dat2)
unique(dat2$stlkey)
help <- unique(dat2$stlkey)
help2 <- subset(dat2, lon_start<0)
View(help2)
help2 <- subset(date_haul< 01-01-2020)
help2 <- subset(date_haul< "2021-01-01")
help2 <- subset(help2, date_haul< "2021-01-01")
View(help2)
help2 <- subset(help2, dist_o2>2 | dist_phys>2)
View(help2)
help2 <- subset(help2, dist_o2>3 | dist_phys>3)
View(help2)
#Remove bad Alaska IPHC ones
dat <- subset(dat, dist_o2<3 & dist_phys<3 )
View(dat)
##Combine phys and oxygen data
#dat <- left_join(dat_o2, dat_phys, by=c("id", "lat_start", "lon_start", "date_haul", "depth_m", "bottom_temp_c", "bottom_depth", "gear_temperature", "stlkey", "event_id", "survey_name", "temp c", "salinity psu", "oxygen_ml", "oxygen_sat", "depth_IPHC", ""))
dat <- left_join(dat_o2, dat_phys, by=c("id", "lat_start", "lon_start", "date_haul", "depth_m", "bottom_temp_c", "stlkey", "event_id", "survey_name", "temp c", "salinity psu", "oxygen_ml","oxygen_umol", "oxygen_sat", "depth_IPHC"))
###Distance of haul from GLORYS point
##Oxygen
test <- matrix(nrow=nrow(dat))
for(i in 1:nrow(dat)){
dist <- spDistsN1(as.matrix(dat[i,c("lon_start", "lat_start")]),as.matrix(dat[i,c("lon_gloryso2", "lat_gloryso2")]),longlat=FALSE)
test[i] <- dist
}
dat$dist_o2 <- test
##Temp-sal
dat2 <- subset(dat, !is.na(dat$lat_glorysphys))
test <- matrix(nrow=nrow(dat))
for(i in 1:nrow(dat)){
dist <- spDistsN1(as.matrix(dat[i,c("lon_start", "lat_start")]),as.matrix(dat[i,c("lon_glorysphys", "lat_glorysphys")]),longlat=FALSE)
test[i] <- dist
}
dat$dist_phys <- test
## Plot
ggplot(dat, aes(x=dist_o2))+geom_histogram()
#Remove bad Alaska IPHC ones
dat <- subset(dat, dist_o2<3 & dist_phys<3 )
## Re-Plot
ggplot(dat, aes(x=dist_o2))+geom_histogram()
ggplot(dat, aes(x=dist_phys))+geom_histogram()
View(o2_bc)
View(o2_bc)
#Remove bad Alaska IPHC ones
dat <- subset(dat, lon_start<0 & lon_start>-170)
## Re-Plot
ggplot(dat, aes(x=dist_o2))+geom_histogram()
ggplot(dat, aes(x=dist_phys))+geom_histogram()
View(dat)
View(dat)
###Difference in depth between coordinates (root squared error)
dat$depth_diffo2 <- sqrt((dat$depth_m-dat$depth_gloryso2)^2)
dat$depth_diffts <- sqrt((dat$depth_m-dat$depth_glorysphys)^2)
ggplot(dat, aes(x=depth_diffo2))+geom_histogram()
dat$depth_diffo2 <- dat$depth_m-dat$depth_gloryso2
dat$depth_diffts <- dat$depth_m-dat$depth_glorysphys
ggplot(dat, aes(x=depth_diffo2))+geom_histogram()
ggplot(dat, aes(x=depth_diffphys))+geom_histogram()
ggplot(dat, aes(x=depth_diffts))+geom_histogram()
View(dat)
dat$depth_diffo2 <- dat$depth_m-dat$depth_gloryso2
dat$depth_diffts <- dat$depth_m-dat$depth_glorysphys
dat3 <- subset(dat, depth_diffo2>50)
View(dat3)
dat3 <- subset(dat, depth_diffo2>50 | depth_diffo2<50)
dat3 <- subset(dat, abs(depth_diffo2)>50)
ggplot(dat, aes(x=depth_diffo2))+geom_histogram()
View(dat_o2)
